"use strict";
function _typeof(e) {
  "@babel/helpers - typeof";
  return (_typeof =
    "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
      ? function (e) {
          return typeof e;
        }
      : function (e) {
          return e &&
            "function" == typeof Symbol &&
            e.constructor === Symbol &&
            e !== Symbol.prototype
            ? "symbol"
            : typeof e;
        })(e);
}
function _toConsumableArray(e) {
  return (
    _arrayWithoutHoles(e) ||
    _iterableToArray(e) ||
    _unsupportedIterableToArray(e) ||
    _nonIterableSpread()
  );
}
function _nonIterableSpread() {
  throw new TypeError(
    "Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."
  );
}
function _unsupportedIterableToArray(e, t) {
  if (e) {
    if ("string" == typeof e) return _arrayLikeToArray(e, t);
    var o = Object.prototype.toString.call(e).slice(8, -1);
    return (
      "Object" === o && e.constructor && (o = e.constructor.name),
      "Map" === o || "Set" === o
        ? Array.from(e)
        : "Arguments" === o ||
          /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o)
        ? _arrayLikeToArray(e, t)
        : void 0
    );
  }
}
function _iterableToArray(e) {
  if (
    ("undefined" != typeof Symbol && null != e[Symbol.iterator]) ||
    null != e["@@iterator"]
  )
    return Array.from(e);
}
function _arrayWithoutHoles(e) {
  if (Array.isArray(e)) return _arrayLikeToArray(e);
}
function _arrayLikeToArray(e, t) {
  (null == t || t > e.length) && (t = e.length);
  for (var o = 0, r = new Array(t); o < t; o++) r[o] = e[o];
  return r;
}
var sliderNews = document.querySelectorAll(".slider-news");
sliderNews.length > 0 &&
  _toConsumableArray(sliderNews).map(function (e) {
    new Swiper(e.querySelector(".swiper"), {
      slidesPerView: "auto",
      spaceBetween: 35,
      pagination: { el: e.querySelector(".swiper-pagination"), clickable: !0 },
    });
  });
var passBtn = document.querySelectorAll(".password-change");
passBtn.length > 0 &&
  _toConsumableArray(passBtn).map(function (e) {
    var t = e.parentElement.querySelector('input[type="password"]');
    t &&
      e.addEventListener("click", function () {
        return (t.type = "password" === t.type ? "text" : "password");
      });
  });
var Modal = {
    modal: null,
    open: function (e) {
      var t =
          arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null,
        o = this;
      return (
        (e =
          ("object" === _typeof(e) && e instanceof Element) ||
          e instanceof HTMLDocument
            ? e
            : document.querySelector(e)),
        e && e.classList.contains("modal")
          ? (document.querySelector("html").classList.add("modal--no-scroll"),
            (e.style.display = "block"),
            (o.modal = e),
            o.modal.addEventListener(
              "click",
              function (e) {
                var t = e.target;
                return o._closeOutside(t);
              },
              { once: !0 }
            ),
            document.body.addEventListener(
              "keydown",
              function (e) {
                return o._closeKeyESC(e);
              },
              { once: !0, passive: !0 }
            ),
            "function" != typeof t || t(e))
          : console.error(
              "Modal: modal.open(selector, callback) | selector not element"
            )
      );
    },
    close: function (e) {
      var t = this;
      if (t.modal) {
        var o = t.modal;
        return (
          document.querySelector("html").classList.remove("modal--no-scroll"),
          (t.modal.style.display = ""),
          (t.modal = null),
          "function" != typeof e || e(o)
        );
      }
      return console.error(
        "Modal: modal.close(callback) | modal active not found"
      );
    },
    _closeOutside: function (e) {
      e && !e.closest(".modal-content") && this.close();
    },
    _closeKeyESC: function (e) {
      this.modal && 27 === e.keyCode && this.close();
    },
  },
  selectors = document.querySelectorAll(".selector");
selectors.length > 0 &&
  _toConsumableArray(selectors).map(function (e) {
    var t = e.querySelector(".selector__option--selected");
    if (t) {
      e.querySelector('input[type="hidden"]').value = t.dataset.value;
      var o = e.querySelector(".selector__placeholder");
      o.innerHTML = "";
      _toConsumableArray(t.cloneNode(!0).children).map(function (e) {
        return o.append(e);
      });
    }
    e.querySelector(".selector__list").addEventListener("click", function (t) {
      var o = t.target.closest(".selector__option");
      if (o) {
        var r = o.closest(".selector");
        r
          .querySelector(".selector__option--selected")
          .classList.remove("selector__option--selected"),
          o.classList.add("selector__option--selected");
        var l = r.querySelector(".selector__option--selected"),
          n = e.querySelector('input[type="hidden"]');
        (n.value = l.dataset.value), n.dispatchEvent(new Event("change"));
        var s = r.querySelector(".selector__placeholder");
        s.innerHTML = "";
        var a = l.cloneNode(!0);
        a.classList.remove("selector__option--selected"),
          _toConsumableArray(a.children).map(function (e) {
            return s.append(e);
          }),
          r.classList.remove("selector--drop");
      }
    }),
      e
        .querySelector(".selector__placeholder")
        .addEventListener("click", function (e) {
          var t = e.target.closest(".selector__placeholder");
          t && t.closest(".selector").classList.toggle("selector--drop");
        });
  });
var spoilers = document.querySelectorAll(".spoiler");
spoilers.length > 0 &&
  _toConsumableArray(spoilers).map(function (e) {
    e.classList.contains("spoiler--locked")
      ? e.querySelector(".spoiler__content") &&
        e.querySelector(".spoiler__content").remove()
      : e
          .querySelector(".spoiler__top")
          .addEventListener("click", function (e) {
            var t = e.target,
              o = t.closest(".spoiler");
            o && o.classList.toggle("spoiler--dropped");
          });
  });

const headerBurger = document.querySelector(".header__burger");
const headerNav = document.querySelector(".header__nav");

headerBurger.addEventListener("click", () => {
  headerBurger.classList.toggle("burger-active");
  headerNav.classList.toggle("burger-active");
});

if (window.screen.width < 992) {
  $(document).ready(function () {
    $(".block__title").click(function name(event) {
      $(this)
        .toggleClass("footer-active")
        .next()
        .slideToggle(300, function name(params) {
          if ($(this).is(":visible") && $(this).hasClass("footer__social"))
            $(this).css("display", "flex");
        });
    });
  });
}
